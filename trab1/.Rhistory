r <- kmeans(df, 3)
centers <- r$centers[r$cluster,]
distances <- sqrt(rowSums((df - centers)^2))
scores <- distances
outliers <- order(scores, decreasing=T)[1:5]
# Para visualizar
xy <- prcomp(df)$x[, 1:2]
pch <- rep(".", nrow(xy))
pch[outliers] <- "+"
plot(xy, pch=pch)
library(DWwR)
library(DMwR)
minmax.scale <- function(x)(x-min(x))/(max(x)-min(x))
set.seed(1234)
df <- iris[,1:4]
scores1 <- lofactor(df,k=5)
r<- kmeans(df,3)
centers <- r$centers[r$cluster,]
distances <- sqrt(rowSums((df-centers)^2))
mcr <- ave(distances,r$cluster,FUN=mean)
scores2 <- distances/mcr
scores1 <- minmax.scale(scores1)
scores2 <- minmax.scale(scores2)
outliers1 <- order(scores1,decreasing = TRUE)[1:5]
outliers2 <- order(scores2,decreasing = TRUE)[1:5]
outliers1
outliers2
score3 <- mean(score1,score2)
scores3 <- mean(scores1,scores2)
scores2 <- distances/mcr
scores2
library(DMwR)
minmax.scale <- function(x)(x-min(x))/(max(x)-min(x))
set.seed(1234)
df <- iris[,1:4]
scores1 <- lofactor(df,k=5)
r<- kmeans(df,3)
centers <- r$centers[r$cluster,]
distances <- sqrt(rowSums((df-centers)^2))
mcr <- ave(distances,r$cluster,FUN=mean)
scores2 <- distances/mcr
scores3 <- mean(scores1,scores2)
scores1
scores2
mean(2,3)
mean(scores1,scores1)
mean?
;
?mean
(scores1+scores2)2
?min
scores1-score2
scores1-scores2
(scores1-scores2)/2
scores3 <- (scores1-scores2)/2
scores3 <- minmax.scale(scores3)
outliers3 <- order(scores3,decreasing = TRUE)[1:5]
outliers3
outliers1
outliers2
source('~/.active-rstudio-document', echo=TRUE)
outliers1
outliers2
outliers3
outliers1 & outliers2
c(outliers1,outliers2,outliers3)
sort(c(outliers1,outliers2,outliers3))
set.seed(1234)
df <- iris[,1:4]
outliers3 <- order(scores3,decreasing = TRUE)[1:10]
outliers3
limit vmemoryuse 4096m
memory.limit()
err.raw<-c(46202326,46039547,45893505,45774086)
sil.raw<-c(-0.07698748,-0.07773819,-0.03980938,-0.1483372)
err.norm<-c(46202326,46039547,45893505,45774086)
sil.norm<-c(-0.07698748,-0.07773819,-0.03980938,-0.1483372)
err.raw<-c(20365.38,20125.02,19920.57,19823.53)
sil.raw<-c(0.02215913,0.02642752,0.02877533,0.02390987)
k<-c(5,10,15,20)
plot(err.norm, type="b", col="blue",main="tot.withinss")
points(sil.norm, pch="*", col="red")
plot(err.norm, type="b", col="blue",main="tot.withinss")
points(err.raw, pch="*", col="red")
lines(err.raw, col="red", lty=2)
plot( k, err.norm, type="l", col="red" )
par(new=TRUE)
plot( k, err.raw, type="l", col="green" )
plot( k, err.norm, type="b", col="red" )
par(new=TRUE)
plot( err.raw, type="b", col="green" )
k<-c(5,10,15,20)
df <- data.frame(k,err.norm,err.raw)
require(ggplot2)
ggplot(df, aes(k)) +                    # basic graphical object
geom_line(aes(y=err.norm), colour="red") +  # first layer
geom_line(aes(y=err.raw), colour="green")  # second layer
err.norm
err.raw
df <- data.frame(k,err.norm)#,err.raw)
require(ggplot2)
ggplot(df, aes(k)) +                    # basic graphical object
geom_line(aes(y=err.norm), colour="red")   # first layer
err.norm<-err.norm/max(err.norm)
err.raw<-err.raw/max(err.raw)
df <- data.frame(k,err.norm,err.raw)
ggplot(df, aes(k)) +                    # basic graphical object
geom_line(aes(y=err.norm), colour="red") +  # first layer
geom_line(aes(y=err.raw), colour="green")  # second layer
err.norm<-c(46202326,46039547,45893505,45774086)
err.norm.max<-max(err.norm)
err.norm<-err.norm/err.norm.max
sil.norm<-c(-0.07698748,-0.07773819,-0.03980938,-0.1483372)
err.raw<-c(20365.38,20125.02,19920.57,19823.53)
err.raw.max<-max(err.raw)
err.raw<-err.raw/err.raw.max
sil.raw<-c(0.02215913,0.02642752,0.02877533,0.02390987)
k<-c(5,10,15,20)
df1 <- data.frame(x=k,y=err.norm,type=concatenate("Não normalizado/",err.raw.max))
df1 <- data.frame(x=k,y=err.norm,type=paste("Não normalizado/",err.raw.max))
df2 <- data.frame(x=k,y=err.raw,type=paste("Normalizado/",err.norm.max))
df <- rbind(df1,df2)
ggplot(df)+geom_line(aes(x,y,colour=type))
ggplot(df,aes(x = x, y = value, colour = variable))+geom_line(aes(x,y,colour=type))
df1 <- data.frame(x=k,y=err.norm,type=paste("err.raw * ",err.raw.max))
df2 <- data.frame(x=k,y=err.raw,type=paste("err.norm * ",err.norm.max))
df <- rbind(df1,df2)
ggplot(df,aes(x = k, y = tot.withinss, colour = legenda))+geom_line(aes(x,y,colour=type))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(df,aes(x = k, y = tot.withinss, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.2, 0.2)
ggplot(df,aes(x = k, y = tot.withinss, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.1)
ggplot(df,aes(x = k, y = tot.withinss, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.05)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.05)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.01)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.02)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.1)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.05)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.025)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.03)
#sil
df1 <- data.frame(x=k,y=sil.norm,type="sil.raw")
df2 <- data.frame(x=k,y=sil.raw,type="sil.norm")
df <- rbind(df1,df2)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.03)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.03)+geom_point()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.03)+geom_point()
ggplot(df,aes(x = k, y = tot.withinss, colour = legenda))+geom_line(aes(x,y,colour=type))
ggplot(df,aes(x = k, y = silhueta, colour = legenda))+geom_line(aes(x,y,colour=type))+ ylim(-0.15, 0.03)+geom_point()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line()+
geom_point()
ggplot(data=df, aes(x=time, y=bill, group=1)) +
geom_line()+
geom_point()
ggplot(data=df, aes(x = "k", y = "tot.withinss", colour = "legenda"))+
geom_line()+
geom_point()
ggplot(data=df, aes(x=k, y=tot.withinss, colour=legenda))+
geom_line()+
geom_point()
ggplot(data=df, aes(x=time, y=bill, group=1)) +
geom_line()
ggplot(data=df, aes(x=k, y=tot.withinss, colour=legenda))+
geom_line()
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line()
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line(aes(x,y,colour=type))
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line(aes(x,y,colour=type))+
geom_point()
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line()+
geom_point(aes(x,y,colour=type))
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_point()+
geom_line(aes(x,y,colour=type))
ggplot(data=df)+
geom_point()+
geom_line(aes(x,y,colour=type))
ggplot(data=df)+
geom_point()+
geom_line()
ggplot(data=df,aes(x = k, y = tot.withinss, colour = legenda))+
geom_point()+
geom_line()
ggplot(data=df,aes(x = k, y = tot.withinss, colour = legenda))+
geom_line()
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line(aes(x,y,colour=type))
ggplot(data=df, aes(x=time, y=bill, group=1)) +
geom_line()+
geom_point()
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line(aes(x,y,colour=type))
geom_point()
g <- ggplot(df, aes(x=k))
g <- g + geom_line(aes(y=type=paste("err.raw * ",err.raw.max)), colour="red")
g <- g + geom_line(aes(y=type=paste("err.norm * ",err.norm.max)), colour="green")
g
g <- ggplot(df, aes(k))
g <- g + geom_line(aes(y=type=paste("err.raw * ",err.raw.max)), colour="red")
g <- ggplot(df, aes(k))
g <- g + geom_line(aes(y=paste("err.raw * ",err.raw.max)), colour="red")
g <- g + geom_line(aes(y=paste("err.norm * ",err.norm.max)), colour="green")
g
g <- ggplot(df, aes(k))
g <- g + geom_line(aes(y="err.raw *"), colour="red")
g <- g + geom_line(aes(y="err.norm * "), colour="green")
g
g <- ggplot(df, aes(k))
g <- g + geom_line(aes(y=err.raw), colour="red")
g <- g + geom_line(aes(y=err.norm), colour="green")
g
#err
df1 <- data.frame(x=k,y=err.norm,type=paste("err.raw * ",err.raw.max))
df2 <- data.frame(x=k,y=err.raw,type=paste("err.norm * ",err.norm.max))
df <- rbind(df1,df2)
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_line(aes(x,y,colour=type))
ggplot(data=df, aes(x=time, y=bill, group=1)) +
geom_line()+
geom_point()
ggplot(data=df, aes(x=time, y=bill, group=sex)) +
geom_line(linetype="dotted", color="red", size=2)+
geom_point(color="blue", size=3)
# Line plot with multiple groups
ggplot(data=df, aes(x=time, y=bill, group=sex)) +
geom_line()+
geom_point()
#err
df1 <- data.frame(x=k,y=err.norm)#,type=paste("err.raw * ",err.raw.max))
df2 <- data.frame(x=k,y=err.raw)#,type=paste("err.norm * ",err.norm.max))
df <- rbind(df1,df2)
# Line plot with multiple groups
ggplot(data=df, aes(x=time, y=bill, group=sex)) +
geom_line()+
geom_point()
#err
df1 <- data.frame(x=k,y=err.norm,type=paste("err.raw * ",err.raw.max))
df2 <- data.frame(x=k,y=err.raw,type=paste("err.norm * ",err.norm.max))
df <- rbind(df1,df2)
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_point(aes(x,y,colour=type))
ggplot(data=df, aes(x = k, y = tot.withinss, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
#sil
df1 <- data.frame(x=k,y=sil.norm,type="sil.raw")
df2 <- data.frame(x=k,y=sil.raw,type="sil.norm")
df <- rbind(df1,df2)
ggplot(data=df, aes(x = k, y = silhueta, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))+
ylim(-0.15, 0.03)
source('~/.active-rstudio-document', echo=TRUE)
fuzzy.norm<-c(370.7825,185.3913,123.5942,92.69563)
df <- data.frame(x=k,y=fuzzy.norm,type="fuzzy.norm")
ggplot(data=df, aes(x = k, y = silhueta, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
fuzzy.raw<-c(0.1656154,0.088077,0.05520513,0.04140385)
df <- data.frame(x=k,y=fuzzy.raw,type="fuzzy.raw")
ggplot(data=df, aes(x = k, y = silhueta, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
df <- data.frame(x=k,y=fuzzy.norm,type="fuzzy.norm")
ggplot(data=df, aes(x = k, y = withinerror, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
df <- data.frame(x=k,y=fuzzy.raw,type="fuzzy.raw")
ggplot(data=df, aes(x = k, y = withinerror, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
kmedian.morm->c(1034196,1032774,1031196,1029579)
kmedian.raw->c(22320.55,22184.71,22141.89,22012.61)
kmedian.morm<-c(1034196,1032774,1031196,1029579)
kmedian.raw<-c(22320.55,22184.71,22141.89,22012.61)
df <- data.frame(x=k,y=kmedian.morm,type="kmedian.morm")
ggplot(data=df, aes(x = k, y = withinerror, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
df <- data.frame(x=k,y=kmedian.raw,type="kmedian.raw")
ggplot(data=df, aes(x = k, y = withinerror, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
graficos2 <- function(data1, data2, type1, type2, ylabel){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = ylabel, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
}
graficos2(kmedian.morm,kmedian.raw,"kmedian.morm","kmedian.row","Sum of within cluster distances")
K<-c(5,10,15,20)
graficos2(kmedian.morm,kmedian.raw,"kmedian.morm","kmedian.row","Sum of within cluster distances")
fn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/fn.max
fr.max<-max(kmedian.raw)
kmedian.raw<-kmedian.raw/fr.max
graficos2(kmedian.morm,kmedian.raw,paste("kmedian.morm*",fn.max),
paste("kmedian.row",fr.max),"Sum of within cluster distances")
graficos2 <- function(data1, data2, type1, type2, ylabel){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = "Sum of within cluster distances", colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
}
fn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/fn.max
fr.max<-max(kmedian.raw)
kmedian.raw<-kmedian.raw/fr.max
graficos2(kmedian.morm,kmedian.raw,paste("kmedian.morm*",fn.max),
paste("kmedian.row*",fr.max),"Sum of within cluster distances")
graficos2 <- function(data1, data2, type1, type2, ylabel){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = Sum of within cluster distances, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
}
graficos2 <- function(data1, data2, type1, type2, ylabel){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = (Sum of within cluster distances), colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))
}
graficos2 <- function(data1, data2, type1, type2, ylabel){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = value, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))+
xlab(ylabel)
}
fn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/fn.max
fr.max<-max(kmedian.raw)
kmedian.raw<-kmedian.raw/fr.max
graficos2(kmedian.morm,kmedian.raw,paste("kmedian.morm*",fn.max),
paste("kmedian.row*",fr.max),"Sum of within cluster distances")
graficos2 <- function(data1, data2, type1, type2, ylabel){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = value, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))+
ylab(ylabel)
}
graficos2(kmedian.morm,kmedian.raw,paste("kmedian.morm*",fn.max),
paste("kmedian.row*",fr.max),"Sum of within cluster distances")
graficos2 <- function(data1, data2, type1, type2, ylabel,t){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = value, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))+
ylab(ylabel)+
title(t)
}
graficos2(kmedian.morm,kmedian.raw,paste("morm*",fn.max),
paste("row*",fr.max),"Sum of within cluster distances","kmedian")
graficos2 <- function(data1, data2, type1, type2, ylabel,t){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = value, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))+
ylab(ylabel)+
ggtitle(t)
}
graficos2(kmedian.morm,kmedian.raw,paste("morm*",fn.max),
paste("row*",fr.max),"Sum of within cluster distances","kmedian")
fn.max<-max(fuzzy.norm)
fuzzy.morm<-fuzzy.morm/fn.max
fn.max<-max(fuzzy.norm)
fuzzy.norm<-fuzzy.morm/fn.max
fn.max<-max(fuzzy.norm)
fuzzy.norm<-fuzzy.norm/fn.max
fr.max<-max(fuzzy.raw)
fuzzy.raw<-fuzzy.raw/fr.max
graficos2(fuzzy.morm,kmedian.raw,paste("morm*",fn.max),
paste("row*",fr.max),"withinerror","fuzzy")
graficos2(fuzzy.norm,kmedian.raw,paste("morm*",fn.max),
paste("row*",fr.max),"withinerror","fuzzy")
graficos2(fuzzy.norm,fuzzy.raw,paste("morm*",fn.max),
paste("row*",fr.max),"withinerror","fuzzy")
fuzzy.norm<-c(370.7825,185.3913,123.5942,92.69563)
fuzzy.raw<-c(0.1656154,0.088077,0.05520513,0.04140385)
kmedian.morm<-c(1034196,1032774,1031196,1029579)
kmedian.raw<-c(22320.55,22184.71,22141.89,22012.61)
K<-c(5,10,15,20)
require(ggplot2)
graficos2 <- function(data1, data2, type1, type2, ylabel,t){
df1 <- data.frame(x=K,y=data1,type=type2)
df2 <- data.frame(x=K,y=data2,type=type1)
df <- rbind(df1,df2)
ggplot(data=df, aes(x = K, y = value, colour = legenda))+
geom_point(aes(x,y,colour=type))+
geom_line(aes(x,y,colour=type))+
ylab(ylabel)+
ggtitle(t)
}
fn.max<-max(fuzzy.norm)
fuzzy.norm<-fuzzy.norm/fn.max
fr.max<-max(fuzzy.raw)
fuzzy.raw<-fuzzy.raw/fr.max
graficos2(fuzzy.norm,fuzzy.raw,paste("norm*",fn.max),
paste("raw*",fr.max),"withinerror","fuzzy")
kn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/kn.max
kr.max<-max(kmedian.raw)
kmedian.raw<-kmedian.raw/fr.max
graficos2(kmedian.morm,kmedian.raw,paste("norm*",kn.max),
paste("raw*",kr.max),"Sum of within cluster distances","kmedian")
kmedian.morm<-c(1034196,1032774,1031196,1029579)
kmedian.raw<-c(22320.55,22184.71,22141.89,22012.61)
kn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/kn.max
kr.max<-max(kmedian.raw)
kmedian.raw<-kmedian.raw/fr.max
graficos2(kmedian.morm,kmedian.raw,paste("norm*",kn.max),
paste("raw*",kr.max),"Sum of within cluster distances","kmedian")
kmedian.raw<-kmedian.raw/kr.max
graficos2(kmedian.morm,kmedian.raw,paste("norm*",kn.max),
paste("raw*",kr.max),"Sum of within cluster distances","kmedian")
kn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/kn.max
kmedian.morm<-c(1034196,1032774,1031196,1029579)
kmedian.raw<-c(22320.55,22184.71,22141.89,22012.61)
kn.max<-max(kmedian.morm)
kmedian.morm<-kmedian.morm/kn.max
kr.max<-max(kmedian.raw)
kmedian.raw<-kmedian.raw/kr.max
graficos2(kmedian.morm,kmedian.raw,paste("norm*",kn.max),
paste("raw*",kr.max),"Sum of within cluster distances","kmedian")
err.norm<-c(46202326,46039547,45893505,45774086)
err.norm.max<-max(err.norm)
err.norm<-err.norm/err.norm.max
sil.norm<-c(-0.07698748,-0.07773819,-0.03980938,-0.1483372)
err.raw<-c(20365.38,20125.02,19920.57,19823.53)
err.raw.max<-max(err.raw)
err.raw<-err.raw/err.raw.max
sil.raw<-c(0.02215913,0.02642752,0.02877533,0.02390987)
#err
graficos2(err.norm,err.raw,paste("raw*",fn.max),
paste("norm*",fr.max),"SSE","Erro quadrático total")
#sil
graficos2(sil.norm,sil.raw,paste("raw*",fn.max),
paste("norm*",fr.max),"Coeficiente de silhueta","Silhueta")
#sil
graficos2(sil.norm,sil.raw,paste("raw"),
paste("norm"),"Coeficiente de silhueta","Silhueta")
setwd("~/Projects/ComplexData/inf-615/trab1")
rm(list=ls())
setwd("~/Projects/ComplexData/inf-615/trab1")
valSet<-read.csv("housePricing_valSet.csv")
p<-read.csv("p.csv")
valSet<-read.csv("housePricing_valSet.csv")
trainSet<-read.csv("housePricing_trainSet.csv")
### 1 - Inspecione os dados. Quantos exemplos você tem?
print("Examples de dados de treinamento",nrow(trainSet))
### 1 - Inspecione os dados. Quantos exemplos você tem?
print("Examples de dados de treinamento"+nrow(trainSet))
### 1 - Inspecione os dados. Quantos exemplos você tem?
past("Examples de dados de treinamento", nrow(trainSet))
### 1 - Inspecione os dados. Quantos exemplos você tem?
paste("Examples de dados de treinamento", nrow(trainSet))
paste("Exemplos de dados de validacao",nrow(valSet))
View(p)
View(valSet)
trainSet$ocean_proximity
unique(trainSet$ocean_proximity)
View(trainSet)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
valSet(!is.na(valSet))
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
valSet[!is.na(valSet)]
View(valSet)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
apply(valSet,2,mean)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
apply(valSet,1,mean)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
sapply(valSet,2,mean)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
sapply(valSet,mean)
View(valSet)
!is.na(valSet)
valSet_c<-valSet[!is.na(valSet)]
trainSet_c<-trainSet[!is.na(trainSet)]
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
sapply(valSet_c,mean)
sapply(valSet_c,std)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
mean(valSet_c$longitude)
## 2- Normalize os dados de modo que eles fiquem todos no mesmo intervalo.
mean(valSet$longitude)
valSet_c<-valSet[valSet[!is.na(valSet)]]
valSet_c<-valSet[valSet!=NA]
